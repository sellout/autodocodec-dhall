cabal-version: 3.0

name: autodocodec-dhall
version: 0.0.1.0
synopsis: Autodocodec support for Dhall files
description: Autodocodec provides generic codecs to convert between many data
             formats. This adds Dhall to the list of formats.
author: Greg Pfeil <greg@technomadic.org>
maintainer: Greg Pfeil <greg@technomadic.org>
copyright: 2025 Greg Pfeil
homepage: https://github.com/sellout/autodocodec-dhall#readme
bug-reports: https://github.com/sellout/autodocodec-dhall/issues
category: Codecs, Dhall
build-type: Custom
license: AGPL-3.0-or-later
license-files:
  LICENSE
extra-doc-files:
  CHANGELOG.md
  README.md
  docs/*.md
tested-with:
  GHC == {
    9.6.1, 9.6.3,
    9.8.1, 9.8.4,
    9.10.1,
    9.12.1
  }

source-repository head
  type: git
  location: https://github.com/sellout/autodocodec-dhall

-- This mimics the GHC2024 extension
-- (https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/control.html?highlight=doandifthenelse#extension-GHC2024),
-- but supporting compilers back to GHC 7.10. If the oldest supported compiler
-- is GHC 9.10, then this stanza can be removed and `import: GHC2024` can be
-- replaced by `default-language: GHC2024`. If the oldest supported compiler is
-- GHC 9.2, then this can be simplified by setting `default-language: GHC2021`
-- and only including the extensions added by GHC2024.
common GHC2024
  default-language: Haskell2010
  default-extensions:
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DeriveDataTypeable
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    DisambiguateRecordFields
    DoAndIfThenElse
    EmptyCase
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    GADTs
    GeneralizedNewtypeDeriving
    HexFloatLiterals
    ImportQualifiedPost
    InstanceSigs
    LambdaCase
    MagicHash
    MonadComprehensions
    MonomorphismRestriction
    MultiParamTypeClasses
    NamedFieldPuns
    NamedWildCards
    NumericUnderscores
    PolyKinds
    PostfixOperators
    RankNTypes
    RoleAnnotations
    ScopedTypeVariables
    StandaloneDeriving
    StandaloneKindSignatures
    TupleSections
    TypeApplications
    TypeOperators
    UnicodeSyntax

flag noisy-deprecations
  description:
    Prior to GHC 9.10, the `DEPRECATED` pragma can’t distinguish between terms
    and types. Consenquently, you can get spurious warnings when there’s a name
    collision and the name in the other namespace is deprecated. Or you can
    choose to not get those warnings, at the risk of not being warned when
    there’s a name collision and the namespace you’re referencing is the one
    that’s deprecated.

common defaults
  import: GHC2024
  build-depends:
    base ^>= {4.18.0, 4.19.0, 4.20.0, 4.21.0},
  ghc-options:
    -Weverything
    -- This one just reports unfixable things, AFAICT.
    -Wno-all-missed-specialisations
    -- Type inference good.
    -Wno-missing-local-signatures
    -- Warns even when `Unsafe` is explicit, not inferred. See
    -- https://gitlab.haskell.org/ghc/ghc/-/issues/16689
    -Wno-unsafe
  if impl(ghc >= 9.8.1)
    ghc-options:
      -- Inference good.
      -Wno-missing-role-annotations
  default-extensions:
    BlockArguments
    DefaultSignatures
    ExplicitNamespaces
    FunctionalDependencies
    LiberalTypeSynonyms
    LexicalNegation
    PackageImports
    ParallelListComp
    QualifiedDo
    RecursiveDo
    -- RequiredTypeArguments - uncomment if the oldest supported version is GHC 9.10.1+
    StrictData
    TemplateHaskellQuotes
    TransformListComp
    NoGeneralizedNewtypeDeriving
    NoImplicitPrelude
    NoMonomorphismRestriction
    NoPatternGuards
    NoStarIsType
    NoTypeApplications
  if flag(noisy-deprecations)
    cpp-options: -DSELLOUT_NOISY_DEPRECATIONS

custom-setup
  setup-depends:
    -- This must match the `cabal-version` at the top of this file.
    --
    -- TODO: Remove once haskell/cabal#3751 is fixed.
    Cabal >= 3.0.0,
    -- `custom-setup` doesn’t support `import`, so we need to duplicate the
    -- `base` dependency range from `defaults`.
    base ^>= {4.18.0, 4.19.0, 4.20.0, 4.21.0},
    -- `cabal-plan-bounds` doesn’t check bounds for `custom-setup`, so this one
    -- is manually managed.
    cabal-doctest ^>= {1.0.0},

library
  import: defaults
  hs-source-dirs:
    src
  -- NB: The hard constraints are listed in the cabal.project file and inform
  --     the bounds here. See there for explanations if these bounds don’t work
  --     in your stack. I’m happy to support wider bounds when feasible.
  build-depends:
    aeson ^>= {2.2.3},
    autodocodec ^>= {0.4.0, 0.5.0},
    containers ^>= {0.6.7, 0.7},
    contravariant ^>= {1.5.5},
    dhall ^>= {1.42.3},
    either ^>= {5.0.3},
    hashable ^>= {1.4.7, 1.5.0},
    indexed-traversable ^>= {0.1.4},
    scientific ^>= {0.3.8},
    semigroupoids ^>= {6.0.1},
    text ^>= {2.0.2, 2.1},
    unordered-containers ^>= {0.2.20},
    vector ^>= {0.13.2},
  exposed-modules:
    Autodocodec.Dhall
  other-modules:
    Autodocodec.Dhall.Decode
    Autodocodec.Dhall.Encode

test-suite doctests
  import: defaults
  type: exitcode-stdio-1.0
  hs-source-dirs:
    tests
  main-is: doctests.hs
  build-depends:
    autodocodec-dhall,
    doctest ^>= {0.24.2},
  -- TODO: The sections below here are necessary because we don’t have control
  --       over the generated `Build_doctests.hs` file. So we have to silence
  --       all of its warnings one way or another.
  ghc-options:
    -Wno-missing-deriving-strategies
    -Wno-missing-export-lists
    -Wno-missing-kind-signatures
    -Wno-missing-import-lists
    -Wno-safe
    -- `doctest` requires the package containing the doctests as a dependency
    -- to ensure it gets built before this test-suite, even though the package
    -- appears to be unused.
    -Wno-unused-packages
  default-extensions:
    -- Since we can’t add `{-# LANGUAGE Safe -#}` to the generated
    -- “Build_doctests.hs”, we set it here, and that means it has to match
    -- doctests.hs, which is `Unsafe`.
    Unsafe

test-suite spec
  import: defaults
  type: exitcode-stdio-1.0
  hs-source-dirs:
    tests
  main-is: spec.hs
  build-depends:
    autodocodec ^>= {0.4.0, 0.5.0},
    autodocodec-dhall,
    dhall ^>= {1.42.3},
    hspec ^>= {2.11.13},
    hspec-expectations ^>= {0.8.4},
    prettyprinter ^>= {1.7.1},
    string-interpolate ^>= {0.3.4},
    text ^>= {2.0.2, 2.1},
    vector ^>= {0.13.2},
  other-modules:
    Paths_autodocodec_dhall
    Spec.DecodeSpec
    Spec.EncodeSpec
    Spec.Types
  build-tool-depends:
    hspec-discover:hspec-discover
